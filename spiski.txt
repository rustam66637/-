class Node:
    def __init__(self, v):
        self.value=v
        self.next=None

class LinkedList:
    def __init__(self):
        self.head = None
        self.tail = None

    def add_in_tail(self, item):
        if self.head is None:
            self.head = item
        else:
            self.tail.next = item
        self.tail = item

    def print_all_nodes(self):
        node = self.head
        while node != None:
            print(node.value)
            node = node.next

    def delete(self, val):
        node = self.head
        xvost=self.tail
        pred = None
        while node!=None:
            if node.value == val:
                if xvost.value == val:
                    self.tail=pred
                if pred == None:
                    self.head = node.next
                else:
                    pred.next = node.next
                return
            else:
                pred = node
            node = node.next

s_list = LinkedList()
s_list.add_in_tail(Node(50))
s_list.add_in_tail(Node(35))
s_list.add_in_tail(Node(50))
s_list.add_in_tail(Node(128))
s_list.delete(128)
s_list.print_all_nodes()

